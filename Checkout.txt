Checkout: In Git terms, a "checkout" is the act of switching between different versions of a target entity. The git checkout command operates upon three distinct entitites: files, commits, and branches. In addition to the definition of "checkout" the phrase "checking out" is commonly used to imply the act of executing the git checkout command. Checking out branches is similar to checkout out old commits and files in that the working directory is updated to match the selected branch/ revision; however, the new changes are saved in the project history--that is, it's not a read-only operation.

Example: git checkout -b <new-branch> : This command simultaneously creates and checks out <new-branch> before running git checkout <new-branch>. Git checkout works hand-in-hand with git branch. The git branch command can be used to create a new branch. When you want to start a new feature, you create a new branch off master using git branch new_branch. Once created you can then use git checkout new_branch to switch to that branch. Additionally, the git checkout command accepts a -b argument that acts as a convenience method which will create the new branch and immediately switch to it. You can work on multiple features in a single repository by switching between them with git checkout.
